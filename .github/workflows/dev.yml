name: Deployment to dev environment

on:
  push:
    branches:
      - master

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      APP_DIR: ./app
      EXPORT_SCRIPT_DIR: ./export-script
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Install app dependencies
        working-directory: ${{env.APP_DIR}}
        run: |
          npm install
          sudo npm install -g firebase-tools
      - name: Run frontend tests
        working-directory: ${{env.APP_DIR}}
        run: npm run test-ci
      - name: Run firestore tests
        working-directory: ${{env.APP_DIR}}
        run: npm run test-firestore
      - name: Install export script dependencies
        working-directory: ${{env.EXPORT_SCRIPT_DIR}}
        run: |
          npm install
          sudo npm install -g firebase-tools
      - name: Run export script tests
        working-directory: ${{env.EXPORT_SCRIPT_DIR}}
        run: npm test
      - name: Set environment variable with new version
        run: |
          PREVIOUS_VERSION=$(git fetch origin --tags -q && git describe --tags --match "dev-deployed-*" $(git rev-list --tags="dev-deployed-*" --max-count=1) | sed 's/[^0-9]*//g')
          echo "::set-env name=NEW_VERSION::$(($PREVIOUS_VERSION+1))"
      - name: Build production bundle
        env:
          REACT_APP_PROJECT_ID: ${{secrets.FIREBASE_DEV_PROJECT_ID}}
          REACT_APP_API_KEY: ${{secrets.FIREBASE_DEV_API_KEY}}
          REACT_APP_AUTH_DOMAIN: ${{secrets.FIREBASE_DEV_AUTH_DOMAIN}}
          REACT_APP_VERSION: ${{env.NEW_VERSION}}
        working-directory: ${{env.APP_DIR}}
        run: npm run build
      - name: Deploy to firebase
        env:
          FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
        working-directory: ${{env.APP_DIR}}
        run: |
          firebase use ${{secrets.FIREBASE_DEV_PROJECT_ID}}
          firebase deploy
      - name: Create dev-deployed-* tag
        env:
          COMMIT_SHA: ${{ github.sha }}
        run: |
          TAG="dev-deployed-${{env.NEW_VERSION}}"
          git tag $TAG $COMMIT_SHA
          git push origin $TAG
